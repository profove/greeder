download:
https://www.qt.io/offline-installers
http://download.qt.io/archive/

介绍及适用场景
https://blog.csdn.net/rl529014/article/details/51344881

优点：
跨平台、封装好
缺点：
为了跨平台考虑损失了部分性能，重点需要验证socket在高并发时Qt的性能问题，考虑是否需要将部分功能转为native编程
移动端的性能问题，后期需要重点验证

qt框架
qt框架的大致思路
https://blog.csdn.net/amwha/article/details/73928281

qmake:
先生成.pro工程文件，然后由.pro文件生成Makefile文件
https://blog.csdn.net/lvdepeng123/article/details/79007988
https://blog.csdn.net/cqltbe131421/article/details/54579890
1、qmake生成console应用配置
qmake -project CONFIG=console
qmake
nmake
2、qmake生成windows应用配置
qmake -project CONFIG=windows
qmake
nmake

vc环境：
cl, nmake
命令行下配置环境可先运行vcvars32.bat

qt源码


qt教程
http://www.qter.org/thread-629-1-1.html

qt under macbook
install xcode first

qt 5 api doc:
http://doc.qt.io/qt-5/classes.html

qt network programming:
https://blog.csdn.net/y____xiang/article/details/80398913
套接字连接前先做如下设置：
m_socket->setProxy(QNetworkProxy::NoProxy);

qt多线程编程：
https://www.cnblogs.com/senior-engineer/p/6185814.html

qt中文显示问题：
QT中还有2个概念非常重要：
1、源码字符集(the source character set)	源码文件是使用何种编码保存的
2、执行字符集(the execution character set)	可执行程序内保存的是何种编码(程序执行时内存中字符串编码)
Qt5假定的执行字符集是UTF8，不再允许用户擅自改动。这样一来，Qt4中setCodecXXX的各种副作用不再存在，而且中文问题更为简单
QString::fromUtf8("这是汉字");//在源代码为UTF8时使用
QString::fromLocal8Bit("这是汉字")//在本地编码转为UTF8时使用
建议采用下面的宏解决办法：
#define TR(str)   (QString::fromLocal8Bit(str))  //解决中文乱码

qt信号槽：
qt4语法的信号槽检查是在运行期，qt5的语法在编译期检查

qt对象状态调试：
可以使用 QObject::dumpObjectTree() 和 QObject::dumpObjectInfo() 这两个函数进行这方面的调试。
在 Qt 中，尽量在构造的时候就指定 parent 对象，并且大胆在堆上创建




